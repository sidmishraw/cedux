'use strict';

var _index = require('./index');

var cedux = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

// Generated by CoffeeScript 2.0.2
/*
 * app.coffee
 * @author Sidharth Mishra
 * @description An example implementation of the same
 * @created Sun Nov 19 2017 23:35:06 GMT-0800 (PST)
 * @last-modified Sun Nov 19 2017 23:35:06 GMT-0800 (PST)
 */
var Store, myReducer;

// myReducer
myReducer = function myReducer(state, action) {
  if (action != null && action.type != null) {
    console.log('Action type: ' + action.type);
    switch (action.type) {
      case 'fd':
        return 100;
      case 'rt':
        return 90;
      default:
        return 50;
    }
  }
};

Store = cedux.cedux().createStore(myReducer, 0);

Store.dispatch({
  type: 'fd'
});

console.log();

console.log(Store.getCurrentState());

Store.dispatch({
  type: 'rt'
});

console.log();

console.log(Store.getCurrentState());

Store.dispatch({
  type: 'I dunno Action'
});

console.log();

console.log(Store.getCurrentState());

console.log("State Tree");

console.log(Store.getStateTree());